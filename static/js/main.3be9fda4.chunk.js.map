{"version":3,"sources":["assets/logo.png","contexts/AppContext.js","components/Forkme.js","components/Header.js","components/Create.js","components/Status.js","components/List/ListItem.js","components/List/List.js","components/Empty.js","components/Filter.js","components/Root.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AppContext","createContext","AppProvider","props","useState","todoItems","setTodoItems","todoItemsFiltered","setTodoItemsFiltered","filterStatus","setFilterStatus","filterQuery","setFilterQuery","isLoading","setIsLoading","isAdding","setIsAdding","useEffect","localStorage","JSON","parse","newItems","filter","item","completed","title","toLowerCase","includes","stringify","Provider","value","children","Forkme","className","href","target","rel","Header","src","logo","alt","Create","setItem","id","setId","useContext","addNewItem","trim","theID","Math","random","toString","substr","newItem","newTodoItems","unshift","document","querySelector","focus","type","placeholder","onChange","event","keyCode","currentTarget","onKeyDown","onClick","Status","status","setStatus","percentage","setPercentage","countAll","length","countCompleted","style","width","ListItem","todoItem","animation","useSpring","from","opacity","transform","to","checkTheTodoItem","map","removeFromUIWithAnimations","$li","classList","add","li","tabIndex","handleCheckItem","handleCheckItemByEnter","onFocus","querySelectorAll","forEach","remove","parent","parentElement","setTimeout","readOnly","handleInputChange","onBlur","hasAttribute","setAttribute","inp","removeAttribute","handleDeleteItem","List","trailSprings","useTrail","spring","index","div","key","Empty","Filter","handleFilterChange","getAttribute","handleFilterByEnter","data-status","Root","removeActiveClassFromItemUI","contains","addEventListener","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3be9fda4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.d63691ca.png\";","import React, { useState, createContext, useEffect } from \"react\";\r\n\r\nexport const AppContext = createContext();\r\n\r\nexport const AppProvider = (props) => {\r\n    const [todoItems, setTodoItems] = useState([]);\r\n    const [todoItemsFiltered, setTodoItemsFiltered] = useState(todoItems);\r\n    const [filterStatus, setFilterStatus] = useState(\"\");\r\n    const [filterQuery, setFilterQuery] = useState(\"\");\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isAdding, setIsAdding] = useState(true);\r\n\r\n    useEffect(() => {\r\n        if (localStorage[\"todoItems\"]) {\r\n            setTodoItems(JSON.parse(localStorage[\"todoItems\"]));\r\n        }\r\n\r\n        if (localStorage[\"filterStatus\"]) {\r\n            setFilterStatus(localStorage[\"filterStatus\"]);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        let newItems = todoItems.filter((item) => {\r\n            if (filterStatus === \"active\") return !item.completed;\r\n            if (filterStatus === \"completed\") return item.completed;\r\n            return true;\r\n        });\r\n\r\n        if (filterQuery !== \"\") {\r\n            newItems = newItems.filter((item) => {\r\n                return item.title.toLowerCase().includes(filterQuery);\r\n            });\r\n        }\r\n\r\n        setTodoItemsFiltered(newItems);\r\n    }, [filterStatus, setTodoItemsFiltered, todoItems, filterQuery]);\r\n\r\n    useEffect(() => {\r\n        localStorage[\"todoItems\"] = JSON.stringify(todoItems);\r\n    }, [todoItems]);\r\n\r\n    useEffect(() => {\r\n        localStorage[\"filterStatus\"] = filterStatus;\r\n    }, [filterStatus]);\r\n\r\n    return (\r\n        <AppContext.Provider\r\n            value={{\r\n                todoItems,\r\n                setTodoItems,\r\n                todoItemsFiltered,\r\n                setTodoItemsFiltered,\r\n                filterStatus,\r\n                setFilterStatus,\r\n                filterQuery,\r\n                setFilterQuery,\r\n                isLoading,\r\n                setIsLoading,\r\n                isAdding,\r\n                setIsAdding,\r\n            }}\r\n        >\r\n            {props.children}\r\n        </AppContext.Provider>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport \"./Forkme.css\";\r\n\r\nfunction Forkme() {\r\n    return (\r\n        <div className=\"forkme\">\r\n            <a\r\n                href=\"https://welisonmenezes.github.io/react-js-todo-list/\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                title=\"React Js Todo List - Github Welison Menezes\"\r\n            >\r\n                Fork me on GitHub\r\n            </a>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Forkme;\r\n","import React from \"react\";\r\nimport \"./Header.css\";\r\nimport logo from \"./../assets/logo.png\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"header\">\r\n            <img src={ logo } alt=\"Logo\" />\r\n            <h1>React Js <span>Todo List</span></h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport \"./Create.css\";\r\nimport { AppContext } from \"../contexts/AppContext\";\r\n\r\nfunction Create() {\r\n    const [item, setItem] = useState(\"\");\r\n    const [id, setId] = useState(\"\");\r\n    const { todoItems } = useContext(AppContext);\r\n    const { setTodoItems } = useContext(AppContext);\r\n    const { setIsAdding } = useContext(AppContext);\r\n\r\n    function handleInputChange(event) {\r\n        if (event.keyCode !== 13) {\r\n            setItem(event.currentTarget.value);\r\n        }\r\n    }\r\n\r\n    function handleInputKeyDown(event) {\r\n        if (event.keyCode === 13) {\r\n            addNewItem();\r\n        }\r\n    }\r\n\r\n    function handleAddNewItem() {\r\n        addNewItem();\r\n    }\r\n\r\n    function addNewItem() {\r\n        if (item.trim() !== \"\") {\r\n            const theID = uniqueID();\r\n            const newItem = {\r\n                id: theID,\r\n                title: item,\r\n                completed: false,\r\n            };\r\n            const newTodoItems = [...todoItems];\r\n            newTodoItems.unshift(newItem);\r\n            setTodoItems(newTodoItems);\r\n            setId(theID);\r\n            setIsAdding(true);\r\n        }\r\n    }\r\n\r\n    function uniqueID() {\r\n        return \"_\" + Math.random().toString(36).substr(2, 9);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setItem(\"\");\r\n        document.querySelector(\".create input\").focus();\r\n    }, [id]);\r\n\r\n    return (\r\n        <div className=\"create\">\r\n            <div>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"New Todo...\"\r\n                    id=\"newItem\"\r\n                    value={item}\r\n                    onChange={handleInputChange}\r\n                    onKeyDown={handleInputKeyDown}\r\n                />\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn-add\"\r\n                    id=\"handleNewItem\"\r\n                    onClick={handleAddNewItem}\r\n                >\r\n                    <i className=\"material-icons\">add</i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Create;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport \"./Status.css\";\r\nimport { AppContext } from \"../contexts/AppContext\";\r\n\r\nfunction Status() {\r\n    const [status, setStatus] = useState(\"0 of 0\");\r\n    const [percentage, setPercentage] = useState(0);\r\n    const { todoItems } = useContext(AppContext);\r\n\r\n    useEffect(() => {\r\n        const completed = todoItems.filter((item) => item.completed);\r\n        const countAll = todoItems.length;\r\n        const countCompleted = completed.length;\r\n        setPercentage(100 / (countAll / countCompleted));\r\n        setStatus(`${completed.length} of ${todoItems.length}`);\r\n    }, [todoItems]);\r\n\r\n    return (\r\n        <div className=\"status\">\r\n            <span>{status}</span>\r\n            <div>\r\n                <div\r\n                    className=\"status-bar\"\r\n                    style={{ width: `${percentage}%` }}\r\n                ></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Status;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport \"./ListItem.css\";\r\nimport { AppContext } from \"../../contexts/AppContext\";\r\n\r\nfunction ListItem({ todoItem }) {\r\n    const { todoItems } = useContext(AppContext);\r\n    const { setTodoItems } = useContext(AppContext);\r\n    const { isAdding, setIsAdding } = useContext(AppContext);\r\n    const { isLoading } = useContext(AppContext);\r\n    const animation = useSpring({\r\n        from: {\r\n            opacity: isAdding && !isLoading ? 0 : 1,\r\n            transform: isAdding && !isLoading ? \"translate(-100px, 0)\" : \"translate(0, 0)\",\r\n        },\r\n        to: { opacity: 1, transform: \"translate(0, 0)\" },\r\n    });\r\n\r\n    function handleCheckItem(todoItem) {\r\n        checkTheTodoItem(todoItem);\r\n    }\r\n\r\n    function handleCheckItemByEnter(event, todoItem) {\r\n        if (event.keyCode === 13) {\r\n            checkTheTodoItem(todoItem);\r\n        }\r\n    }\r\n\r\n    function checkTheTodoItem(todoItem) {\r\n        const newTodoItems = [...todoItems];\r\n        newTodoItems.map((item) => {\r\n            if (item.id === todoItem.id) {\r\n                item.completed = !todoItem.completed;\r\n            }\r\n            return item;\r\n        });\r\n        setTodoItems(newTodoItems);\r\n    }\r\n\r\n    function handleCheckFocus(event) {\r\n        document.querySelectorAll(\".list li\").forEach((item) => {\r\n            item.classList.remove(\"active\");\r\n        });\r\n        const parent = event.currentTarget.parentElement;\r\n        setTimeout(() => {\r\n            parent.classList.add(\"active\");\r\n        }, 100);\r\n    }\r\n\r\n    function handleInputChange(event, todoItem) {\r\n        const newTodoItems = [...todoItems];\r\n        newTodoItems.map((item) => {\r\n            if (item.id === todoItem.id) {\r\n                item.title = event.currentTarget.value;\r\n            }\r\n            return item;\r\n        });\r\n        setTodoItems(newTodoItems);\r\n    }\r\n\r\n    function handleInputBlur(event) {\r\n        if (!event.currentTarget.hasAttribute(\"readOnly\")) {\r\n            const newTodoItems = todoItems.filter((item) => {\r\n                event.currentTarget.setAttribute(\"readOnly\", 1);\r\n                if (item.title !== \"\") {\r\n                    return true;\r\n                } else {\r\n                    removeFromUIWithAnimations(\r\n                        event.currentTarget.parentElement\r\n                    );\r\n                    // delay to animation\r\n                    setTimeout(() => {\r\n                        setTodoItems(newTodoItems);\r\n                    }, 500);\r\n                    return false;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    function handleEnableEditItem(event) {\r\n        const inp = event.currentTarget.parentElement.querySelector(\"input\");\r\n        inp.removeAttribute(\"readOnly\");\r\n        inp.focus();\r\n    }\r\n\r\n    function handleDeleteItem(event, todoItem) {\r\n        const newTodoItems = todoItems.filter((item) => {\r\n            return item.id !== todoItem.id;\r\n        });\r\n        removeFromUIWithAnimations(event.currentTarget.parentElement);\r\n        // delay to animation\r\n        setTimeout(() => {\r\n            setTodoItems(newTodoItems);\r\n        }, 500);\r\n    }\r\n\r\n    function removeFromUIWithAnimations($li) {\r\n        $li.classList.add(\"not-static\");\r\n        $li.classList.add(\"animate-out\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        setIsAdding(false);\r\n    }, [setIsAdding]);\r\n\r\n    return (\r\n        <animated.li\r\n            style={animation}\r\n            id={todoItem.id}\r\n            className={`list-item ${todoItem.completed ? \"completed\" : \"\"}`}\r\n        >\r\n            <span\r\n                className=\"checkmark\"\r\n                tabIndex=\"0\"\r\n                onClick={() => {\r\n                    handleCheckItem(todoItem);\r\n                }}\r\n                onKeyDown={(event) => {\r\n                    handleCheckItemByEnter(event, todoItem);\r\n                }}\r\n                onFocus={handleCheckFocus}\r\n            ></span>\r\n            <input\r\n                type=\"text\"\r\n                readOnly=\"1\"\r\n                tabIndex=\"-1\"\r\n                value={todoItem.title}\r\n                onChange={(event) => {\r\n                    handleInputChange(event, todoItem);\r\n                }}\r\n                onBlur={handleInputBlur}\r\n            />\r\n            <button\r\n                type=\"button\"\r\n                className=\"btn-edit\"\r\n                onClick={handleEnableEditItem}\r\n            >\r\n                <i className=\"material-icons\">edit</i>\r\n            </button>\r\n            <button\r\n                type=\"button\"\r\n                className=\"btn-delete\"\r\n                onClick={(event) => {\r\n                    handleDeleteItem(event, todoItem);\r\n                }}\r\n            >\r\n                <i className=\"material-icons\">delete</i>\r\n            </button>\r\n        </animated.li>\r\n    );\r\n}\r\n\r\nexport default ListItem;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport \"./List.css\";\r\nimport { AppContext } from \"../../contexts/AppContext\";\r\nimport ListItem from \"./ListItem\";\r\nimport { useTrail, animated } from \"react-spring\";\r\n\r\nfunction List() {\r\n    const { todoItemsFiltered } = useContext(AppContext);\r\n    const { todoItems } = useContext(AppContext);\r\n    const { isLoading, setIsLoading } = useContext(AppContext);\r\n    const trailSprings = useTrail(todoItemsFiltered.length, {\r\n        from: {\r\n            opacity: isLoading ? 0 : 1,\r\n            transform: isLoading ? \"translate(-100px, 0)\" : \"translate(0, 0)\",\r\n        },\r\n        to: { opacity: 1, transform: \"translate(0, 0)\" },\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (todoItems.length > 0 && isLoading) {\r\n            setTimeout(() => {\r\n                setIsLoading(false);\r\n            }, 10);\r\n        }\r\n    }, [setIsLoading, todoItems, isLoading]);\r\n\r\n    return (\r\n        <div className=\"list\">\r\n            <ul id=\"todo-items\">\r\n                {trailSprings.map((spring, index) => (\r\n                    <animated.div\r\n                        key={todoItemsFiltered[index].id}\r\n                        style={spring}\r\n                    >\r\n                        <ListItem todoItem={todoItemsFiltered[index]} />\r\n                    </animated.div>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default List;\r\n","import React from \"react\";\r\nimport \"./Empty.css\";\r\n\r\nfunction Empty() {\r\n    return (\r\n        <div className=\"empty\">\r\n            <p>\r\n                <i className=\"material-icons\">not_interested</i>\r\n                No item found.\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Empty;\r\n","import React, { useContext } from \"react\";\r\nimport \"./Filter.css\";\r\nimport { AppContext } from \"../contexts/AppContext\";\r\n\r\nfunction Filter() {\r\n    const { filterStatus, setFilterStatus } = useContext(AppContext);\r\n    const { filterQuery, setFilterQuery } = useContext(AppContext);\r\n    const { setIsAdding } = useContext(AppContext);\r\n\r\n    function handleFilterChange(event) {\r\n        setFilterStatus(event.currentTarget.getAttribute(\"data-status\"));\r\n        setIsAdding(false);\r\n    }\r\n\r\n    function handleFilterByEnter(event) {\r\n        if (event.keyCode === 13) {\r\n            setFilterStatus(event.currentTarget.getAttribute(\"data-status\"));\r\n            setIsAdding(false);\r\n        }\r\n    }\r\n\r\n    function handleInputChange(event) {\r\n        setFilterQuery(event.currentTarget.value);\r\n        setIsAdding(false);\r\n    }\r\n\r\n    return (\r\n        <div className=\"filter\">\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Search Todo...\"\r\n                value={filterQuery}\r\n                onChange={handleInputChange}\r\n            />\r\n            <ul>\r\n                <li\r\n                    className={`${filterStatus === \"all\" ? \"active\" : \"\"}`}\r\n                    tabIndex=\"0\"\r\n                    data-status=\"all\"\r\n                    onClick={handleFilterChange}\r\n                    onKeyDown={(event) => {\r\n                        handleFilterByEnter(event);\r\n                    }}\r\n                >\r\n                    All\r\n                </li>\r\n                <li\r\n                    className={`${filterStatus === \"active\" ? \"active\" : \"\"}`}\r\n                    tabIndex=\"0\"\r\n                    data-status=\"active\"\r\n                    onClick={handleFilterChange}\r\n                    onKeyDown={(event) => {\r\n                        handleFilterByEnter(event);\r\n                    }}\r\n                >\r\n                    Active\r\n                </li>\r\n                <li\r\n                    className={`${filterStatus === \"completed\" ? \"active\" : \"\"}`}\r\n                    tabIndex=\"0\"\r\n                    data-status=\"completed\"\r\n                    onClick={handleFilterChange}\r\n                    onKeyDown={(event) => {\r\n                        handleFilterByEnter(event);\r\n                    }}\r\n                >\r\n                    Completed\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Filter;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport \"./Root.css\";\r\nimport { AppContext } from \"../contexts/AppContext\";\r\nimport Forkme from \"./Forkme\";\r\nimport Header from \"./Header\";\r\nimport Create from \"./Create\";\r\nimport Status from \"./Status\";\r\nimport List from \"./List/List\";\r\nimport Empty from \"./Empty\";\r\nimport Filter from \"./Filter\";\r\n\r\nfunction Root() {\r\n    const { todoItems } = useContext(AppContext);\r\n\r\n    useEffect(() => {\r\n        addEventsToAccessibility();\r\n    });\r\n\r\n    function addEventsToAccessibility() {\r\n        document\r\n            .querySelector(\"body\")\r\n            .addEventListener(\"click\", function (event) {\r\n                removeActiveClassFromItemUI(event);\r\n            });\r\n        document\r\n            .querySelector(\"body\")\r\n            .addEventListener(\"keyup\", function (event) {\r\n                if (event.key === \"Tab\") {\r\n                    removeActiveClassFromItemUI(event);\r\n                }\r\n            });\r\n    }\r\n\r\n    function removeActiveClassFromItemUI(event) {\r\n        if (event.target.parentElement) {\r\n            if (event.target.parentElement.classList.contains(\"list-item\"))\r\n                return;\r\n            if (event.target.parentElement.parentElement) {\r\n                if (\r\n                    event.target.parentElement.parentElement.classList.contains(\r\n                        \"list-item\"\r\n                    )\r\n                )\r\n                    return;\r\n            }\r\n        }\r\n        if (document.querySelector(\".list li.active\")) {\r\n            document.querySelectorAll(\".list li\").forEach((item) => {\r\n                item.classList.remove(\"active\");\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"root\">\r\n            <Forkme />\r\n            <div className=\"todo-app\">\r\n                <Header />\r\n                <Create />\r\n                {todoItems.length > 0 && <Status />}\r\n                {todoItems.length > 0 && <List />}\r\n                {todoItems.length <= 0 && <Empty />}\r\n                {todoItems.length > 0 && <Filter />}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Root;\r\n","import React from \"react\";\nimport { AppProvider } from \"./contexts/AppContext\";\nimport Root from \"./components/Root\";\n\nfunction App() {\n    return (\n        <AppProvider>\n            <Root />\n        </AppProvider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}